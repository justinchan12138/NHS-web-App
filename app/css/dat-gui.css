/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
.btn {
	display:inline-block
}
.react-dat-gui {
	position:absolute;
	width:280px;
	font-size:12px;
	font-family:'Lucida Grande',sans-serif;
	box-sizing:border-box
}
.react-dat-gui *,.react-dat-gui :after,.react-dat-gui :before {
	box-sizing:inherit
}
.react-dat-gui .dg {
	margin:0;
	padding:0;
	color:#eee;
	overflow:auto
}
.react-dat-gui .dg.main {
	background:#272727
}
.react-dat-gui .dg.main::-webkit-scrollbar {
	width:5px;
	background:#1a1a1a
}
.react-dat-gui .dg.main::-webkit-scrollbar-corner {
	height:0;
	display:none
}
.react-dat-gui .dg.main::-webkit-scrollbar-thumb {
	border-radius:5px;
	background:#676767
}
.react-dat-gui .cr {
	display:block;
	background-color:#1a1a1a;
	-webkit-user-select:none;
	-moz-user-select:none;
	-ms-user-select:none;
	user-select:none
}
.react-dat-gui .cr:not(:last-child) {
	margin-bottom:1px
}
.react-dat-gui .cr.number {
	border-left:5px solid #2FA1D6
}
.react-dat-gui .cr.number input[type=text] {
	color:#2FA1D6
}
.react-dat-gui .cr.number .slider {
	display:block;
	position:relative;
	border:3px solid #1a1a1a;
	border-right-width:1px;
	background-color:#303030;
	background-image:linear-gradient(90deg,#2FA1D6,#2FA1D6);
	background-size:0 100%;
	background-repeat:no-repeat;
	cursor:ew-resize
}
.react-dat-gui .cr.number .slider:before {
	content:'\A0';
	display:block;
	padding:2px
}
.react-dat-gui .cr.string {
	border-left:5px solid #1ed36f
}
.react-dat-gui .cr.string input[type=text] {
	color:#1ed36f
}
.react-dat-gui .cr.boolean {
	position:relative;
	border-left:5px solid #806787
}
.react-dat-gui .cr.boolean .label-text {
	display:block;
	padding:5px 0;
	width:calc(100% - 2em)
}
.react-dat-gui .cr.boolean .checkbox,.react-dat-gui .cr.boolean input[type=checkbox] {
	position:absolute;
	top:1px;
	right:2px;
	bottom:1px;
	width:2em
}
.react-dat-gui .cr.boolean .checkbox {
	display:-ms-flexbox;
	display:flex;
	-ms-flex-align:center;
	align-items:center;
	-ms-flex-pack:center;
	justify-content:center;
	border:3px solid #1a1a1a;
	background:#303030;
	z-index:0
}
.react-dat-gui .cr.boolean .checkbox>.checkmark {
	display:none;
	width:.6em;
	height:.6em;
	stroke-width:7px;
	stroke:#b09fb5
}
.react-dat-gui .cr.boolean input[type=checkbox] {
	height:calc(100% - 4px);
	margin:0;
	opacity:0;
	z-index:1
}
.react-dat-gui .cr.boolean input[type=checkbox]:hover~.checkbox {
	background-color:#3c3c3c
}
.react-dat-gui .cr.boolean input[type=checkbox]:checked~.checkbox>.checkmark {
	display:block
}
.react-dat-gui .cr.button {
	border-left:5px solid #c5bdad
}
.react-dat-gui .cr.button:hover {
	background:#111
}
.react-dat-gui .cr.button .label-text {
	display:block;
	width:100%;
	padding:6px 2px 6px 8px;
	cursor:pointer
}
.react-dat-gui .cr label {
	display:-ms-flexbox;
	display:flex;
	-ms-flex-align:baseline;
	align-items:baseline;
	-ms-flex-pack:start;
	justify-content:flex-start;
	width:100%;
	padding:1px 2px 1px 8px
}
.react-dat-gui .cr .label-text {
	width:40%;
	min-width:0;
	white-space:nowrap;
	overflow:hidden;
	text-overflow:ellipsis;
	-webkit-user-select:none;
	-moz-user-select:none;
	-ms-user-select:none;
	user-select:none
}
.react-dat-gui .cr input[type=text] {
	background:#303030;
	border:3px solid #1a1a1a;
	border-radius:0;
	padding:2px 5px;
	margin:0;
	outline:0;
	font-size:inherit
}
.react-dat-gui .cr input[type=text]:hover {
	background:#3c3c3c
}
.react-dat-gui .cr input[type=text]:focus {
	background:#494949;
	color:#fff
}
.react-dat-gui .cr input[type=text]::-ms-clear {
	display:none
}
.react-dat-gui li {
	font-size:inherit
}
.element3 {
	z-index:2000
}
.element2 {
	z-index:1000
}
.element1 {
	z-index:-1000
}
@keyframes fadeIn {
	0% {
		opacity:0
	}
	100% {
		opacity:1
	}
}
.pull-right {
	float:right
}
.pull-left {
	float:left
}
.hidden,.hide {
	display:none
}
.show {
	display:block
}
.invisible {
	visibility:hidden
}
.visible {
	visibility:visible
}
.clearfix:after,.clearfix:before {
	content:"";
	display:table
}
.clearfix:after {
	clear:both
}
.hide-text {
	height:1em;
	line-height:1.5;
	overflow:hidden
}
.hide-text::before {
	content:"";
	display:block;
	width:0;
	height:100%
}
.no-pointer-events {
	pointer-events:none
}
